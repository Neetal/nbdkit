=head1 NAME

nbdkit-nbd-plugin - nbdkit nbd plugin

=head1 SYNOPSIS

 nbdkit nbd { socket=SOCKNAME | hostname=HOST [port=PORT] | [uri=]URI }
    [export=NAME] [retry=N] [shared=BOOL]

=head1 DESCRIPTION

C<nbdkit-nbd-plugin> is an NBD forwarding plugin for L<nbdkit(1)>.

It provides an NBD server that forwards all traffic as a client to
another existing NBD server.  A primary usage of this setup is to
alter the set of features available to the ultimate end client,
without having to change the original server (for example, to convert
between oldstyle and newstyle, or to add TLS support where the
original server lacks it).  Use of this plugin along with nbdkit
filters (adding I<--filter> to the nbdkit command line) makes it
possible to apply any nbdkit filter to any other NBD server.

For now, this is limited to connecting to another NBD server over an
unencrypted connection; if the data is sensitive, it is better to
stick to a Unix socket rather than transmitting plaintext over TCP. It
is feasible that future additions will support encryption.

=head1 PARAMETERS

One of B<socket>, B<hostname> or B<uri> must be provided to designate
the server. The server can speak either new or old style
protocol. C<uri=> is a magic config key and may be omitted in most
cases.  See L<nbdkit(1)/Magic parameters>.

The following parameters are available whether or not the plugin was
compiled against libnbd:

=over 4

=item B<socket=>SOCKNAME

Connect to the NBD server located at the Unix socket C<SOCKNAME>.

=item B<hostname=>HOST

Connect to the NBD server at the given remote C<HOST> using a TCP socket.

=item B<port=>PORT

When B<hostname> is supplied, use B<PORT> instead of the default port
10809.

=item B<export=>NAME

If this parameter is given, and the server speaks new style protocol,
then connect to the named export instead of the default export (the
empty string). If C<uri> is supplied, the export name should be
embedded in the URI instead.

=item B<retry=>N

If the initial connection attempt to the server fails, retry up to
B<N> times more after a one-second delay between tries (default 0).

=item B<shared=>BOOL

If this parameter is false (default), the plugin will open a distinct
connection to the server for each client making a connection to
nbdkit, and the remote server does not have to be started until
immediately before the first nbdkit client.  If this parameter is set
to true, the plugin will open a single connection to the server when
nbdkit is first started (the C<delay> parameter may be necessary to
coordinate timing of the remote server startup), and all clients to
nbdkit will share that single connection.

=back

The following parameters are only available if the plugin was compiled
against libnbd:

=over 4

=item B<uri=>URI

When B<uri> is supplied, decode B<URI> to determine the address to
connect to. A URI can specify a TCP connection (such as
C<nbd://localhost:10809/export>) or a Unix socket (such as
C<nbd+unix:///export?socket=/path/to/sock>).  Remember to use proper
shell quoting to prevent B<URI> from accidentally being handled as a
shell glob. The B<uri> parameter is only available when the plugin was
compiled against libnbd with URI support; C<nbdkit --dump-plugin nbd>
will contain C<libnbd_uri=1> if this is the case.

=back

=head1 EXAMPLES

Expose the contents of an export served by an old style server over a
Unix socket to TCP network clients that only want to consume encrypted
data. Use I<--exit-with-parent> to clean up nbdkit at the same time
that the old server exits.

 ( sock=`mktemp -u`
   nbdkit --exit-with-parent --tls=require nbd socket=$sock &
   exec /path/to/oldserver --socket=$sock )

 ┌────────────┐          ┌────────┐          ┌────────────┐
 │ new client │ ────────▶│ nbdkit │ ────────▶│ old server │
 └────────────┘   TCP    └────────┘   Unix   └────────────┘

Combine nbdkit's partition filter with qemu-nbd's ability to visit
qcow2 files (nbdkit does not have a native qcow2 plugin), performing
the same task as the deprecated C<qemu-nbd -P 1 -f qcow2
/path/to/image.qcow2> command. Allow multiple clients, even though
C<qemu-nbd> without B<-t> normally quits after the first client, and
utilize a 5-second retry to give qemu-nbd time to create the socket:

 ( sock=`mktemp -u`
   nbdkit --exit-with-parent --filter=partition nbd \
     nbd+unix:///\?socket=$sock shared=1 retry=5 partition=1 &
   exec qemu-nbd -k $sock -f qcow2 /path/to/image.qcow2 )

Conversely, expose the contents of export I<foo> from a new style
server with unencrypted data to a client that can only consume
unencrypted old style. Use I<--run> to clean up nbdkit at the time the
client exits.

 nbdkit -U - -o nbd hostname=example.com export=foo \
  --run '/path/to/oldclient --socket=$unixsocket'

 ┌────────────┐          ┌────────┐          ┌────────────┐
 │ old client │ ────────▶│ nbdkit │ ────────▶│ new server │
 └────────────┘   Unix   └────────┘   TCP    └────────────┘

Learn which features are provided by libnbd by inspecting the
C<libnbd_*> lines:

 nbdkit --dump-plugin nbd

=head1 SEE ALSO

L<nbdkit(1)>,
L<nbdkit-captive(1)>,
L<nbdkit-filter(3)>,
L<nbdkit-tls(1)>,
L<nbdkit-plugin(3)>,
L<libnbd(3)>,
L<qemu-nbd(1)>.

=head1 AUTHORS

Eric Blake

=head1 COPYRIGHT

Copyright (C) 2017, 2019 Red Hat Inc.
