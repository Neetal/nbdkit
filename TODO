* Listen on specific interfaces or protocols (eg. only IPv6).

* Can we run scripting language plugins using shebangs?
* Can scripting language plugins be installed in the plugindir?

  (1) Change the command line specification slightly so that:

        nbdkit perl foo arg1=value arg2=value

      is treated the same as:

        nbdkit perl script=foo arg1=value arg2=value

  (2) From this, shebangs can be used trivially.  If nbdkit-foo-plugin
      is an executable script that starts with:

        #!/usr/bin/nbdkit perl

      then the following command gets run:

        /usr/bin/nbdkit perl /path/to/script [other args]

      which is translated by (1) into:

        /usr/bin/nbdkit perl script=/path/to/script [other args]

  (3) If a script called nbdkit-foo-plugin is installed in the
      scripting directory and the script starts with:

        #!/usr/bin/nbdkit perl

      then we could allow:

        nbdkit foo [args]

      to run the script from the plugin dir, resulting in the
      script running as above.

* syslog? journal?

* Performance - measure and improve it.

* Bash tab completion.

* filters: It should be possible to layer filters over plugins to
  do things like injecting errors and adding delays (see wdelay/rdelay
  options in the file plugin).

* Factor out the nbd client in the nbd plugin and make it available
  to other consumers, so that nbdkit can be layered.

* Suggestions for plugins to be written:

  - glance

  - cinder

  - OVA files

  - XVA files
    https://lists.gnu.org/archive/html/qemu-devel/2017-11/msg02971.html
    is a partial solution but it needs cleaning up.

  - libssh

  - libnfs

  - iscsi

  - gluster

  - ceph/rbd
