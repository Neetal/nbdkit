=encoding utf8

=head1 NAME

nbdkit-fua-filter - nbdkit FUA filter

=head1 SYNOPSIS

 nbdkit --filter=fua plugin [fuamode=MODE] [plugin-args...]

=head1 DESCRIPTION

C<nbdkit-fua-filter> is a filter that intentionally modifies handling
of the 'Forced Unit Access' (FUA) flag across the NBD protocol.  It is
mainly useful for testing client or server fallbacks, and for
evaluating timing differences between proper use of FUA compared to a
full flush.

=head1 PARAMETERS

=over 4

=item B<fuamode=none|emulate|native|force>

Optional, controls which mode the filter will use.  Mode B<none>
(default) means that FUA support is not advertised to the client.
Mode B<emulate> causes the filter to emulate FUA support using the
plugin's C<flush> callback, regardless of whether the plugin itself
supports more efficient FUA (or refuses to load if the plugin's
C<can_flush> callback returns false).  Mode B<native> causes the
filter to advertise native FUA support to earlier filters, useful for
comparing optimizations of FUA handling when splitting large requests
into sub-requests (or refuses to load if the plugin's C<can_fua>
callback returns C<NBDKIT_FUA_NONE>).  Mode B<force> causes the filter
to request FUA on all write transactions, even when the client did not
request it, and in turn treats client flush requests as a no-op (or
refuses to load if the plugin's C<can_fua> callback returns
C<NBDKIT_FUA_NONE>).

=back

=head1 EXAMPLES

Serve the file F<disk.img>, but force the client to submit explicit
flush requests instead of using C<NBD_CMD_FLAG_FUA>:

 nbdkit --filter=fua file file=disk.img

Observe that the blocksize filter optimizes its handling of the FUA
flag based on whether it knows nbdkit will be emulating FUA with a
flush, by comparing the log filter output on top of different fua
filter modes:

 nbdkit --filter=blocksize --filter=log --filter=fua file file=disk.img \
   maxlen=4k logfile=fua_emulated fuamode=emulate
 nbdkit --filter=blocksize --filter=log --filter=fua file file=disk.img \
   maxlen=4k logfile=fua_native fuamode=native

Serve the file F<disk.img> in write-through mode, where all writes
from the client are immediately flushed to disk as if the client had
always requested FUA:

 nbdkit --filter=fua file fuamode=force file=disk.img

=head1 SEE ALSO

L<nbdkit(1)>,
L<nbdkit-file-plugin(1)>,
L<nbdkit-filter(3)>,
L<nbdkit-blocksize-filter(3)>,
L<nbdkit-log-filter(3)>.

=head1 AUTHORS

Eric Blake

=head1 COPYRIGHT

Copyright (C) 2018 Red Hat Inc.

=head1 LICENSE

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:

=over 4

=item *

Redistributions of source code must retain the above copyright
notice, this list of conditions and the following disclaimer.

=item *

Redistributions in binary form must reproduce the above copyright
notice, this list of conditions and the following disclaimer in the
documentation and/or other materials provided with the distribution.

=item *

Neither the name of Red Hat nor the names of its contributors may be
used to endorse or promote products derived from this software without
specific prior written permission.

=back

THIS SOFTWARE IS PROVIDED BY RED HAT AND CONTRIBUTORS ''AS IS'' AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL RED HAT OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.
